# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-04-25 23:07
from __future__ import unicode_literals

from django.db import migrations
from django.db.models import Count


def add_visitors_for_applicants(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    Applicant = apps.get_model('intake', 'Applicant')
    Visitor = apps.get_model('intake', 'Visitor')
    ApplicationEvent = apps.get_model('intake', 'ApplicationEvent')
    applicants = Applicant.objects.using(db_alias).all()
    for app in applicants:
        if not app.visitor_id:
            visitor = Visitor()
            visitor.save()
            app.visitor_id = visitor.id
            app.save()
            first_app_event = ApplicationEvent.objects.using(db_alias).filter(
                applicant_id=app.id).order_by('time').first()
            visitor.first_visit = first_app_event.time
            visitor.save()
    for visitor in Visitor.objects.using(db_alias).annotate(
            applicant_count=Count('applicant')).filter(applicant_count__gt=1):
        roll_up_duplicate_applicants_per_visitor(visitor)


def roll_up_duplicate_applicants_per_visitor(visitor):
    applicants = visitor.applicant_set.all()
    first = applicants.first()
    for applicant in applicants.exclude(id=first.id):
        for event in applicant.events.all():
            event.applicant_id = first.id
            event.save()
        for sub in applicant.form_submissions.all():
            sub.applicant_id = first.id
            sub.save()
        applicant.delete()


def dont_erase_visitors(apps, schema_editor):
    # Dont erase the visitors. Literally do nothing.
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('intake', '0055_visitor_uuid'),
    ]

    operations = [
            migrations.RunPython(
                add_visitors_for_applicants,
                dont_erase_visitors),
    ]
